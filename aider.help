usage: aider [-h] [--openai-api-key OPENAI_API_KEY]
             [--anthropic-api-key ANTHROPIC_API_KEY] [--model MODEL] [--opus]
             [--sonnet] [--4] [--4o] [--mini] [--4-turbo] [--35turbo]
             [--deepseek] [--list-models MODEL]
             [--openai-api-base OPENAI_API_BASE]
             [--openai-api-type OPENAI_API_TYPE]
             [--openai-api-version OPENAI_API_VERSION]
             [--openai-api-deployment-id OPENAI_API_DEPLOYMENT_ID]
             [--openai-organization-id OPENAI_ORGANIZATION_ID]
             [--model-settings-file MODEL_SETTINGS_FILE]
             [--model-metadata-file MODEL_METADATA_FILE]
             [--verify-ssl | --no-verify-ssl] [--edit-format EDIT_FORMAT]
             [--weak-model WEAK_MODEL]
             [--show-model-warnings | --no-show-model-warnings]
             [--map-tokens MAP_TOKENS]
             [--map-refresh {auto,always,files,manual}]
             [--cache-prompts | --no-cache-prompts]
             [--cache-keepalive-pings CACHE_KEEPALIVE_PINGS]
             [--map-multiplier-no-files MAP_MULTIPLIER_NO_FILES]
             [--max-chat-history-tokens MAX_CHAT_HISTORY_TOKENS]
             [--env-file ENV_FILE] [--input-history-file INPUT_HISTORY_FILE]
             [--chat-history-file CHAT_HISTORY_FILE]
             [--restore-chat-history | --no-restore-chat-history]
             [--llm-history-file LLM_HISTORY_FILE] [--dark-mode]
             [--light-mode] [--pretty | --no-pretty] [--stream | --no-stream]
             [--user-input-color USER_INPUT_COLOR]
             [--tool-output-color TOOL_OUTPUT_COLOR]
             [--tool-error-color TOOL_ERROR_COLOR]
             [--tool-warning-color TOOL_WARNING_COLOR]
             [--assistant-output-color ASSISTANT_OUTPUT_COLOR]
             [--code-theme CODE_THEME] [--show-diffs] [--git | --no-git]
             [--gitignore | --no-gitignore] [--aiderignore AIDERIGNORE]
             [--subtree-only] [--auto-commits | --no-auto-commits]
             [--dirty-commits | --no-dirty-commits]
             [--attribute-author | --no-attribute-author]
             [--attribute-committer | --no-attribute-committer]
             [--attribute-commit-message-author | --no-attribute-commit-message-author]
             [--attribute-commit-message-committer | --no-attribute-commit-message-committer]
             [--commit] [--commit-prompt PROMPT] [--dry-run | --no-dry-run]
             [--lint] [--lint-cmd LINT_CMD] [--auto-lint | --no-auto-lint]
             [--test-cmd TEST_CMD] [--auto-test | --no-auto-test] [--test]
             [--file FILE] [--read FILE] [--vim]
             [--voice-language VOICE_LANGUAGE] [--chat-language CHAT_LANGUAGE]
             [--version] [--just-check-update]
             [--check-update | --no-check-update] [--install-main-branch]
             [--upgrade] [--apply FILE] [--yes] [-v] [--show-repo-map]
             [--show-prompts] [--exit] [--message COMMAND]
             [--message-file MESSAGE_FILE] [--encoding ENCODING]
             [-c CONFIG_FILE] [--gui]
             [--suggest-shell-commands | --no-suggest-shell-commands]
             [FILE ...]

aider is AI pair programming in your terminal

options:
  -h, --help            show this help message and exit

Main:
  FILE                  files to edit with an LLM (optional)
  --openai-api-key OPENAI_API_KEY
                        Specify the OpenAI API key [env var: OPENAI_API_KEY]
  --anthropic-api-key ANTHROPIC_API_KEY
                        Specify the Anthropic API key [env var:
                        ANTHROPIC_API_KEY]
  --model MODEL         Specify the model to use for the main chat [env var:
                        AIDER_MODEL]
  --opus                Use claude-3-opus-20240229 model for the main chat
                        [env var: AIDER_OPUS]
  --sonnet              Use claude-3-5-sonnet-20240620 model for the main chat
                        [env var: AIDER_SONNET]
  --4, -4               Use gpt-4-0613 model for the main chat [env var:
                        AIDER_4]
  --4o                  Use gpt-4o-2024-08-06 model for the main chat [env
                        var: AIDER_4O]
  --mini                Use gpt-4o-mini model for the main chat [env var:
                        AIDER_MINI]
  --4-turbo             Use gpt-4-1106-preview model for the main chat [env
                        var: AIDER_4_TURBO]
  --35turbo, --35-turbo, --3, -3
                        Use gpt-3.5-turbo model for the main chat [env var:
                        AIDER_35TURBO]
  --deepseek            Use deepseek/deepseek-coder model for the main chat
                        [env var: AIDER_DEEPSEEK]

Model Settings:
  --list-models MODEL, --models MODEL
                        List known models which match the (partial) MODEL name
                        [env var: AIDER_LIST_MODELS]
  --openai-api-base OPENAI_API_BASE
                        Specify the api base url [env var: OPENAI_API_BASE]
  --openai-api-type OPENAI_API_TYPE
                        Specify the api_type [env var: OPENAI_API_TYPE]
  --openai-api-version OPENAI_API_VERSION
                        Specify the api_version [env var: OPENAI_API_VERSION]
  --openai-api-deployment-id OPENAI_API_DEPLOYMENT_ID
                        Specify the deployment_id [env var:
                        OPENAI_API_DEPLOYMENT_ID]
  --openai-organization-id OPENAI_ORGANIZATION_ID
                        Specify the OpenAI organization ID [env var:
                        OPENAI_ORGANIZATION_ID]
  --model-settings-file MODEL_SETTINGS_FILE
                        Specify a file with aider model settings for unknown
                        models [env var: AIDER_MODEL_SETTINGS_FILE]
  --model-metadata-file MODEL_METADATA_FILE
                        Specify a file with context window and costs for
                        unknown models [env var: AIDER_MODEL_METADATA_FILE]
  --verify-ssl, --no-verify-ssl
                        Verify the SSL cert when connecting to models
                        (default: True) [env var: AIDER_VERIFY_SSL]
  --edit-format EDIT_FORMAT, --chat-mode EDIT_FORMAT
                        Specify what edit format the LLM should use (default
                        depends on model) [env var: AIDER_EDIT_FORMAT]
  --weak-model WEAK_MODEL
                        Specify the model to use for commit messages and chat
                        history summarization (default depends on --model)
                        [env var: AIDER_WEAK_MODEL]
  --show-model-warnings, --no-show-model-warnings
                        Only work with models that have meta-data available
                        (default: True) [env var: AIDER_SHOW_MODEL_WARNINGS]
  --map-tokens MAP_TOKENS
                        Suggested number of tokens to use for repo map, use 0
                        to disable (default: 1024) [env var: AIDER_MAP_TOKENS]
  --map-refresh {auto,always,files,manual}
                        Control how often the repo map is refreshed (default:
                        auto) [env var: AIDER_MAP_REFRESH]
  --cache-prompts, --no-cache-prompts
                        Enable caching of prompts (default: False) [env var:
                        AIDER_CACHE_PROMPTS]
  --cache-keepalive-pings CACHE_KEEPALIVE_PINGS
                        Number of times to ping at 5min intervals to keep
                        prompt cache warm (default: 0) [env var:
                        AIDER_CACHE_KEEPALIVE_PINGS]
  --map-multiplier-no-files MAP_MULTIPLIER_NO_FILES
                        Multiplier for map tokens when no files are specified
                        (default: 2) [env var: AIDER_MAP_MULTIPLIER_NO_FILES]
  --max-chat-history-tokens MAX_CHAT_HISTORY_TOKENS
                        Maximum number of tokens to use for chat history. If
                        not specified, uses the model's
                        max_chat_history_tokens. [env var:
                        AIDER_MAX_CHAT_HISTORY_TOKENS]
  --env-file ENV_FILE   Specify the .env file to load (default: .env in git
                        root) [env var: AIDER_ENV_FILE]

History Files:
  --input-history-file INPUT_HISTORY_FILE
                        Specify the chat input history file (default:
                        /home/skogix/dot/.aider.input.history) [env var:
                        AIDER_INPUT_HISTORY_FILE]
  --chat-history-file CHAT_HISTORY_FILE
                        Specify the chat history file (default:
                        /home/skogix/dot/.aider.chat.history.md) [env var:
                        AIDER_CHAT_HISTORY_FILE]
  --restore-chat-history, --no-restore-chat-history
                        Restore the previous chat history messages (default:
                        False) [env var: AIDER_RESTORE_CHAT_HISTORY]
  --llm-history-file LLM_HISTORY_FILE
                        Log the conversation with the LLM to this file (for
                        example, .aider.llm.history) [env var:
                        AIDER_LLM_HISTORY_FILE]

Output Settings:
  --dark-mode           Use colors suitable for a dark terminal background
                        (default: False) [env var: AIDER_DARK_MODE]
  --light-mode          Use colors suitable for a light terminal background
                        (default: False) [env var: AIDER_LIGHT_MODE]
  --pretty, --no-pretty
                        Enable/disable pretty, colorized output (default:
                        True) [env var: AIDER_PRETTY]
  --stream, --no-stream
                        Enable/disable streaming responses (default: True)
                        [env var: AIDER_STREAM]
  --user-input-color USER_INPUT_COLOR
                        Set the color for user input (default: #00cc00) [env
                        var: AIDER_USER_INPUT_COLOR]
  --tool-output-color TOOL_OUTPUT_COLOR
                        Set the color for tool output (default: None) [env
                        var: AIDER_TOOL_OUTPUT_COLOR]
  --tool-error-color TOOL_ERROR_COLOR
                        Set the color for tool error messages (default:
                        #FF2222) [env var: AIDER_TOOL_ERROR_COLOR]
  --tool-warning-color TOOL_WARNING_COLOR
                        Set the color for tool warning messages (default:
                        #FFA500) [env var: AIDER_TOOL_WARNING_COLOR]
  --assistant-output-color ASSISTANT_OUTPUT_COLOR
                        Set the color for assistant output (default: #0088ff)
                        [env var: AIDER_ASSISTANT_OUTPUT_COLOR]
  --code-theme CODE_THEME
                        Set the markdown code theme (default: default, other
                        options include monokai, solarized-dark, solarized-
                        light) [env var: AIDER_CODE_THEME]
  --show-diffs          Show diffs when committing changes (default: False)
                        [env var: AIDER_SHOW_DIFFS]

Git Settings:
  --git, --no-git       Enable/disable looking for a git repo (default: True)
                        [env var: AIDER_GIT]
  --gitignore, --no-gitignore
                        Enable/disable adding .aider* to .gitignore (default:
                        True) [env var: AIDER_GITIGNORE]
  --aiderignore AIDERIGNORE
                        Specify the aider ignore file (default: .aiderignore
                        in git root) [env var: AIDER_AIDERIGNORE]
  --subtree-only        Only consider files in the current subtree of the git
                        repository [env var: AIDER_SUBTREE_ONLY]
  --auto-commits, --no-auto-commits
                        Enable/disable auto commit of LLM changes (default:
                        True) [env var: AIDER_AUTO_COMMITS]
  --dirty-commits, --no-dirty-commits
                        Enable/disable commits when repo is found dirty
                        (default: True) [env var: AIDER_DIRTY_COMMITS]
  --attribute-author, --no-attribute-author
                        Attribute aider code changes in the git author name
                        (default: True) [env var: AIDER_ATTRIBUTE_AUTHOR]
  --attribute-committer, --no-attribute-committer
                        Attribute aider commits in the git committer name
                        (default: True) [env var: AIDER_ATTRIBUTE_COMMITTER]
  --attribute-commit-message-author, --no-attribute-commit-message-author
                        Prefix commit messages with 'aider: ' if aider
                        authored the changes (default: False) [env var:
                        AIDER_ATTRIBUTE_COMMIT_MESSAGE_AUTHOR]
  --attribute-commit-message-committer, --no-attribute-commit-message-committer
                        Prefix all commit messages with 'aider: ' (default:
                        False) [env var:
                        AIDER_ATTRIBUTE_COMMIT_MESSAGE_COMMITTER]
  --commit              Commit all pending changes with a suitable commit
                        message, then exit [env var: AIDER_COMMIT]
  --commit-prompt PROMPT
                        Specify a custom prompt for generating commit messages
                        [env var: AIDER_COMMIT_PROMPT]
  --dry-run, --no-dry-run
                        Perform a dry run without modifying files (default:
                        False) [env var: AIDER_DRY_RUN]

Fixing and committing:
  --lint                Lint and fix provided files, or dirty files if none
                        provided [env var: AIDER_LINT]
  --lint-cmd LINT_CMD   Specify lint commands to run for different languages,
                        eg: "python: flake8 --select=..." (can be used
                        multiple times) [env var: AIDER_LINT_CMD]
  --auto-lint, --no-auto-lint
                        Enable/disable automatic linting after changes
                        (default: True) [env var: AIDER_AUTO_LINT]
  --test-cmd TEST_CMD   Specify command to run tests [env var: AIDER_TEST_CMD]
  --auto-test, --no-auto-test
                        Enable/disable automatic testing after changes
                        (default: False) [env var: AIDER_AUTO_TEST]
  --test                Run tests and fix problems found [env var: AIDER_TEST]

Other Settings:
  --file FILE           specify a file to edit (can be used multiple times)
                        [env var: AIDER_FILE]
  --read FILE           specify a read-only file (can be used multiple times)
                        [env var: AIDER_READ]
  --vim                 Use VI editing mode in the terminal (default: False)
                        [env var: AIDER_VIM]
  --voice-language VOICE_LANGUAGE
                        Specify the language for voice using ISO 639-1 code
                        (default: auto) [env var: AIDER_VOICE_LANGUAGE]
  --chat-language CHAT_LANGUAGE
                        Specify the language to use in the chat (default:
                        None, uses system settings) [env var:
                        AIDER_CHAT_LANGUAGE]
  --version             Show the version number and exit
  --just-check-update   Check for updates and return status in the exit code
                        [env var: AIDER_JUST_CHECK_UPDATE]
  --check-update, --no-check-update
                        Check for new aider versions on launch [env var:
                        AIDER_CHECK_UPDATE]
  --install-main-branch
                        Install the latest version from the main branch [env
                        var: AIDER_INSTALL_MAIN_BRANCH]
  --upgrade, --update   Upgrade aider to the latest version from PyPI [env
                        var: AIDER_UPGRADE]
  --apply FILE          Apply the changes from the given file instead of
                        running the chat (debug) [env var: AIDER_APPLY]
  --yes                 Always say yes to every confirmation [env var:
                        AIDER_YES]
  -v, --verbose         Enable verbose output [env var: AIDER_VERBOSE]
  --show-repo-map       Print the repo map and exit (debug) [env var:
                        AIDER_SHOW_REPO_MAP]
  --show-prompts        Print the system prompts and exit (debug) [env var:
                        AIDER_SHOW_PROMPTS]
  --exit                Do all startup activities then exit before accepting
                        user input (debug) [env var: AIDER_EXIT]
  --message COMMAND, --msg COMMAND, -m COMMAND
                        Specify a single message to send the LLM, process
                        reply then exit (disables chat mode) [env var:
                        AIDER_MESSAGE]
  --message-file MESSAGE_FILE, -f MESSAGE_FILE
                        Specify a file containing the message to send the LLM,
                        process reply, then exit (disables chat mode) [env
                        var: AIDER_MESSAGE_FILE]
  --encoding ENCODING   Specify the encoding for input and output (default:
                        utf-8) [env var: AIDER_ENCODING]
  -c CONFIG_FILE, --config CONFIG_FILE
                        Specify the config file (default: search for
                        .aider.conf.yml in git root, cwd or home directory)
  --gui, --browser      Run aider in your browser [env var: AIDER_GUI]
  --suggest-shell-commands, --no-suggest-shell-commands
                        Enable/disable suggesting shell commands (default:
                        True) [env var: AIDER_SUGGEST_SHELL_COMMANDS]

Args that start with '--' can also be set in a config file
(/home/skogix/dot/.aider.conf.yml or /home/skogix/.aider.conf.yml or specified
via -c). Config file syntax allows: key=value, flag=true, stuff=[a,b,c] (for
details, see syntax at https://goo.gl/R74nmi). In general, command-line values
override environment variables which override config file values which
override defaults.
